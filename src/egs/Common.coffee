THREE = require "THREE"
require "ConvexGeometry"
{ Helpers, CustomGeometry } = require "./Helpers"

class EGS_Common_Elements
	@TellerDurchmesser = 123.6
	@RohrDurchmesserAussen = 48.3
	@RohrDurchmesserInnen = 45.1
	@TellerHoehe = 9
	
	@rohr: (length) ->
		Helpers.cylinder @RohrDurchmesserAussen, @RohrDurchmesserInnen, length
	
	@teller: ->
		Helpers.cylinder @TellerDurchmesser, @RohrDurchmesserAussen, @TellerHoehe
	
	@rohrverbinder: ->
		rv = Helpers.cylinder 45, 30, 400
		rv.applyMatrix4 Helpers.matrix(0,0,-200)
		rv
	
	@keilKupplungRiegel: ->
		vertices = [
			[25, 7, 38], [26,0, 38], [25,-7, 38], 
			[25, 7, 11], [26,0, 11], [25,-7, 11],
			[25, 7, -1], [26,0, -1], [25,-7, -1],
			[25, 7,-35], [26,0,-35], [25,-7,-35], # 12
			[65, 12, 24], [65,-12, 24],
			[65, 22, 11], [65,-22, 11],
			[65, 22, -1], [65,-22, -1],
			[65, 12,-24], [65,-12,-24], # 20
			[77,  0, 24], [77,-17, 17], 
			[77,-24,  0], [77,-17,-17], 
			[77,  0,-24], [77, 17,-17], 
			[77, 24,  0], [77, 17, 17]
		]
		faces = [
			[ 0, 1,12], [ 1,13,12], [ 1, 2,13], # top
			[ 9,18,10], [10,18,19], [10,19,11], # bottom
			[ 1, 0, 4], [ 4, 0, 3], [ 2, 1, 5], [ 5, 1, 4], # innen
			[ 7, 6,10], [10, 6, 9], [ 8, 7,11], [11, 7,10], # innen
			[ 4, 3,14], [ 4,14,15], [ 5, 4,15], # zwischen
			[ 6, 7,16], [ 7,17,16], [ 7, 8,17], # zwischen
			[14,17,15], [14,16,17],
			[ 3, 0,14], [ 0,12,14], [16, 9, 6], [18, 9,16], #links
			[ 2, 5,15], [ 2,15,13], [17, 8,11], [17,11,19],
			[20,12,13], [20,13,21], [21,13,15], [21,15,22],
			[22,15,17], [22,17,23], [23,17,19], [23,19,24],
			[24,19,18], [24,18,25], [25,18,16], [25,16,26],
			[26,16,14], [26,14,27], [27,14,12], [27,12,20]
		]
		new CustomGeometry vertices, faces
	
	@keilKupplungDiagonale: (d, r = 1)->
		z = 35
		vertices = [
			[25, 7, 38], [26,0, 38], [25,-7, 38], 
			[25, 7, 11], [26,0, 11], [25,-7, 11], # 6
			[25, 7, -1], [26,0, -1], [25,-7, -1],
			[25, 7,-35], [26,0,-35], [25,-7,-35], # 12
			[65, 12, 24], [65,-12, 24],
			[65, 22, 11], [65,-22, 11], # 16
			[65, 22, -1], [65,-22, -1],
			[65, 12,-24], [65,-12,-24], # 20
			[65,  1*r, 20], [65,  1*r,-20], 
			[65, 11*r,-20], [65, 11*r, 20], # 24
			[65+z,  1*r+z*r, 20], [65+z,  1*r+z*r,-20], 
			[65+z-5, 6*r+z*r,-20], [65+z-5, 6*r+z*r, 20]
		]
		faces = [
			[ 0, 1,12], [ 1,13,12], [ 1, 2,13], # top
			[ 9,18,10], [10,18,19], [10,19,11], # bottom
			[ 1, 0, 4], [ 4, 0, 3], [ 2, 1, 5], [ 5, 1, 4], # innen
			[ 7, 6,10], [10, 6, 9], [ 8, 7,11], [11, 7,10], # innen
			[ 4, 3,14], [ 4,14,15], [ 5, 4,15], # zwischen
			[ 6, 7,16], [ 7,17,16], [ 7, 8,17], # zwischen
			[14,17,15], [14,16,17], [14,15,17], [14,17,16], 
			[ 3, 0,14], [ 0,12,14], [16, 9, 6], [18, 9,16], #links
			[ 2, 5,15], [ 2,15,13], [17, 8,11], [17,11,19],
			[12,13,14], [13,15,14], [16,17,18], [17,19,18], # HINTEN
		]
		facesD = [
			[20,21,25], [20,25,24], [22,23,27], [22,27,26],
			[20,27,23], [20,24,27], [21,22,26], [21,26,25],
			[24,25,26], [24,26,27]
		]
		for fd in facesD
			if r > 0
				faces.push fd
			else
				faces.push [fd[1], fd[0], fd[2]]
		
		kkd = new CustomGeometry vertices, faces
		kkd.applyMatrix4 Helpers.matrix(0,0,0, 'Z', .5*r*d)
		kkd

module.exports = EGS_Common_Elements
